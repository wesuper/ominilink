/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    // id("buildlogic.java-conventions")
    alias(libs.plugins.org.springframework.boot)
    application // Already has application plugin
}

application {
    mainClass.set("org.wesuper.liteai.bridge.JavaSeekerMcpServerApplication")
}

dependencies {
    // api(libs.spring.ai.mcp.server.spring.boot.starter) // Removed MCP Starter
//    implementation(platform(libs.spring.ai.bom)) // Explicitly apply Spring AI BOM for troubleshooting
//    api(libs.org.springframework.spring.web)
//    implementation(libs.org.springframework.boot.spring.boot.starter)
//    implementation(libs.org.springframework.boot.spring.boot.starter.web) // For RestClient and Jackson
    // implementation("org.springframework.ai:spring-ai-core:1.0.0") // Removed direct spring-ai-core
//    implementation(libs.spring.ai.mcp.server) // Use corrected OpenAI starter alias
    implementation(libs.spring.ai.mcp.server.webflux)
    implementation(libs.spring.boot.starter.logging)
    implementation(libs.spring.boot.starter.actuator)
    // implementation("io.modelcontextprotocol:modelcontextprotocol-client")
    // implementation("io.modelcontextprotocol:modelcontextprotocol-spec")
    implementation(libs.spoon.core) // Spoon for AST analysis
    implementation(libs.jgit) // Added JGit dependency
    testImplementation(libs.spring.boot.starter.test)
}

description = "omnilink-bridge-javaseeker"

tasks.named<Test>("test") {
    enabled = false
}
